# Generated by Django 4.2.7 on 2025-05-12 16:16

from django.db import migrations, models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('discord_id', models.CharField(max_length=100, unique=True)),
                ('username', models.CharField(max_length=150)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('avatar_url', models.URLField(blank=True, null=True)),
                ('bio', models.TextField(blank=True, null=True)),
                ('join_date', models.DateTimeField(auto_now_add=True)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_admin', models.BooleanField(default=False)),
                ('service_number', models.CharField(blank=True, max_length=50, null=True, unique=True)),
                ('background_image_url', models.URLField(blank=True, null=True)),
                ('timezone', models.CharField(blank=True, max_length=50, null=True)),
                ('discord_notifications', models.BooleanField(default=True)),
                ('email_notifications', models.BooleanField(default=True)),
                ('onboarding_status', models.CharField(blank=True, choices=[('Applied', 'Applied'), ('BIT Completed', 'BIT Completed'), ('Branch Applied', 'Branch Applied'), ('Branch Inducted', 'Branch Inducted'), ('Unit Assigned', 'Unit Assigned'), ('Active', 'Active')], default='Applied', max_length=50, null=True)),
                ('recruit_status', models.BooleanField(default=True)),
                ('training_completion_date', models.DateTimeField(blank=True, null=True)),
                ('application_date', models.DateTimeField(blank=True, null=True)),
                ('bit_completion_date', models.DateTimeField(blank=True, null=True)),
                ('branch_application_date', models.DateTimeField(blank=True, null=True)),
                ('branch_induction_date', models.DateTimeField(blank=True, null=True)),
                ('unit_assignment_date', models.DateTimeField(blank=True, null=True)),
                ('officer_candidate', models.BooleanField(default=False)),
                ('warrant_officer_candidate', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
